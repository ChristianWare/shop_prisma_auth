// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String    @id @default(cuid())
  name              String?
  email             String?   @unique
  emailVerified     DateTime?
  password          String?
  image             String?
  accounts          Account[]
  sessions          Session[]
  shopifyCustomerId String?
  reviews           Review[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Review {
  id             String   @id @default(cuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // The Shopify product ID or handle (e.g. 'gid://Shopify/Product/123')
  productId      String

  // Star rating (1-5 typically)
  rating         Int

  // The user's text review
  comment        String?

  // If the store admin wants to publicly respond to the user's review
  adminResponse  String?

  // Whether the review is approved and publicly visible
  approved       Boolean  @default(false)

  // The order ID if you track which order this review belongs to (optional)
  // Keep it if you plan to do "review only if purchased" logic
  orderId        String?

  // Timestamps
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
